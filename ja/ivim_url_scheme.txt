*ivim_url_scheme.txt*   For Vim バージョン 8.1.    Last change: 2021 Sep 08

                            iVim REFERENCE MANUAL   by Terry Chou

                                            *ivim-url-scheme* *ivimeditor:*

このファイルには、iVim の URL スキーム サポートの詳細が記述されています。


1. イントロダクション                                 |ivim-url-scheme-intro|
2. セキュリティ                                     |ivim-url-scheme-security|
3. 使用方法                                        |ivim-url-scheme-usage|


==============================================================================
1. イントロダクション                                 *ivim-url-scheme-intro*


iVim の最大の目標の 1 つは、その編集機能を iOS システム全体に提供することです。この取り組みの例には、外部ファイルをその場で編集するためのサポート、他のアプリとファイルを共有するためのサポート、およびユーザーが独自のワークフローに統合するためのショートカット インテント (|ivim-shortcuts|) が含まれます。


バージョン 2.41 以降、iVim はカスタム URL スキームのサポートを追加します。


簡単に言うと、カスタム URL スキームは、iVim がシステムに登録する固有のスキームです。別のアプリがこのスキームで URL を開くと、システムは iVim を起動し、それに URL を渡します。 iVim はこの URL を解析し、そこから必要な情報を見つけようとし、見つかった情報に従って動作します。言い換えると、ディレクティブを URL に入れ、それを開くだけで iVim を要求します。



==============================================================================
2. セキュリティ                                     *ivim-url-scheme-security*


URL スキームは、アプリへの潜在的な攻撃ベクトルを提供します。セキュリティのために、iVim のカスタム URL スキームは次のように設計されています。




最初のアラート ~

URL スキームが初めて呼び出されると、iVim は潜在的なセキュリティ問題を警告し、URL スキームを許可するか禁止するかを決定させます。

このアラートは 1 回だけ表示されます。その後、Settings.app (|ios-settings|) で設定を変更できます。



トグルスイッチ ~


iVim は、カスタム URL スキームをいつでも切り替えることができるように、Settings.app にスイッチも提供します。


カスタム URL スキームが無効になっている場合、iVim は URL によって起動された後、何もしません。


==============================================================================
3. 使用方法                                        *ivim-url-scheme-usage*

フォーマット ~

iVim のカスタム URL の一般的な形式は次のとおりです: >

        ivimeditor:<command>[?arg1=value1[&arg2=value2][&...]]
<

最初の "ivimeditor:" の部分は、iVim がシステムに登録するスキームです。システムは、このスキームを見つけるたびに iVim を開きます。 <command> は、iVim によって定義および提供され、iVim に何をすべきかを伝えるコマンドです。コマンドの後に、引数のペアを指定して、iVim にその方法を伝えます。


この形式は、有効な URL として認識されない場合があります。このような場合は、代わりに従来の形式を使用してください: >

        ivimeditor:///<command>[?arg1=value1[&arg2=value2][&...]]
<

変数 ~
                            *ivim-url-scheme-var* *g:ivim_last_url_scheme*

iVim は、最後に実行した URL スキームの情報を記録するグローバル変数 "g:ivim_last_url_scheme" を提供します。


エントリを含む辞書です:

- "scheme_command": コマンドが実行されました。
- "source_app": この URL を呼び出したソース アプリのバンドル識別子。利用できない場合があります。
- 他のエントリはコマンドに依存します。

カスタム URL スキームがまだ呼び出されていない場合は、未定義の可能性があります。

最後に成功したカスタム URL の実行に関する情報のみを記録することに注意してください。つまり、以前の記録は上書きされます。新しいアプリの起動により、未定義になります。

コマンド ~
                                                *ivim-url-scheme-cmds*
これまでのところ、iVim は次の URL スキーム コマンドを定義して提供しています:

* runexcmd (since 2.41)                         *ivim-url-scheme-runexcmd*
                Ex コマンドを実行するように iVim に要求します。

                以下の引数が利用可能です:
                    excmd: 
                        実行する Ex コマンド。これは必須です。各 URL に対して 1 つのコマンドのみが実行されるため、最初のコマンドの後の他の Ex コマンドは無視されます。
                    arg:
                        Ex コマンドの引数。複数の値が許可され、順番に *excmd* に追加されます。 *excmd* はすでにすべての引数を含めることができるため、これはオプションです。
                    callback:
                        Ex コマンドが実行されたときに呼び出される別の URL。 cmd |:iopenurl| のような変数トークンをサポートします。 URL に情報を提供します。
                        
                その後、次のエントリがグローバル変数 "ivim_last_url_scheme" に記録されます:
                    "excmd":
                        実行された最後のExコマンドライン。
                    "output":
                        Ex コマンドの出力。
                    "callback":
                        元のコールバック行がある場合。

                たとえば、これはコマンド ":iexdir" を実行します: >

                    ivimeditor:runexcmd?excmd=iexdir
<
                これにより、コマンドが実行されます ":version": >

                    ivimeditor:runexcmd?excmd=version&excmd=idoc
<
                the second command "idoc" is ignored because only one cmd
                is ran for each URL.
                
                2 番目のコマンド「idoc」は、URL ごとに 1 つのコマンドしか実行されないため無視されます。
                

                これにより、コマンドが実行されます':echo "hello"': >

                    ivimeditor:runexcmd?excmd=echo%20%22hello%22
<
                the space and double quotes are properly percent escaped,
                otherwise iVim would get an invalid URL.

                This runs the command ":ibrowse -n -w": >

                    ivimeditor:runexcmd?excmd=ibrowse&arg=-n&arg=-w
<
                by distributing args to the *arg* arguments, space escapings
                are evaded.

                This runs the command ':echo "hello"' and passes the output
                to another app via the callback: >

                    ivimeditor:runexcmd?excmd=echo&arg=%22hello%22&callback=
                        s:x?o=%7Bg%3Aivim_last_url_scheme%5B%22output%22%5D%7D
<
                the value of *callback* before escaped was: >

                    s:x?o={g:ivim_last_url_scheme["output"]}
<
                before invoking this URL scheme, iVim evaluates the token
                "{g:ivim_last_url_scheme["output"]}" (the output of Ex cmd) and
                replaces it with the value. As a result, the output is passed
                to the target app.


 vim:tw=78:ts=8:noet:ft=help:norl:
 
